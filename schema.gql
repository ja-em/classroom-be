# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PrefixObject {
  prefixid: Int!
  prefixname: String!
  student: [StudentObject!]
}

type GenderObject {
  genderid: Int!
  gendername: String!
  student: [StudentObject!]
}

type GradeLevelObject {
  gradelevelid: Int!
  levelname: String!
  student: [StudentObject!]
}

type ClassroomObject {
  classroomid: Int!
  classname: String!
  academic_year: Int!
  homeroom_teacher: String!
  student_classroom: [StudentClassroomObject!]
}

type ClassroomPaginationObject {
  items: [ClassroomObject!]!
  totalItem: Float!
  totalPage: Float!
  page: Float!
  limit: Float!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type StudentClassroomObject {
  student_classroom_id: Int!
  studentid: Int!
  classroomid: Int!
  student: StudentObject!
  classroom: ClassroomObject!
}

type StudentClassroomPaginationObject {
  items: [StudentClassroomObject!]!
  totalItem: Float!
  totalPage: Float!
  page: Float!
  limit: Float!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type StudentObject {
  studentid: Int!
  prefixid: Int
  firstname: String!
  lastname: String!
  genderid: Int
  birthdate: DateTime!
  gradelevelid: Int
  prefix: PrefixObject
  gender: GenderObject
  gradelevel: GradeLevelObject
  student_classroom: [StudentClassroomObject!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type StudentPaginationObject {
  items: [StudentObject!]!
  totalItem: Float!
  totalPage: Float!
  page: Float!
  limit: Float!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Query {
  getStudents(input: GetAllStudentInput): StudentPaginationObject!
  getStudentById(id: Int!): StudentObject!
  getAllGradeLevel: [GradeLevelObject!]!
  getAllPrefix: [PrefixObject!]!
  getAllGender: [GenderObject!]!
  getAllClassroom(input: GetAllClassroomInput): ClassroomPaginationObject!
  getClassroomById(id: Int!): ClassroomObject!
  getStudentClassroomByClassroomId(classroomId: Int!): StudentClassroomPaginationObject!
}

input GetAllStudentInput {
  page: Float = 1
  limit: Float = 10
  keyword: String
  gradlevelId: Float
}

input GetAllClassroomInput {
  page: Float = 1
  limit: Float = 10
  keyword: String
}

type Mutation {
  createStudent(createStudentInput: CreateStudentInput!): StudentObject!
  updateStudent(updateStudentInput: UpdateStudentInput!): StudentObject!
  removeStudent(id: Int!): StudentObject!
  createClassroom(input: CreateClassroomInput!): ClassroomObject!
  updateClassroom(input: UpdateClassroomInput!): ClassroomObject!
  removeClassroom(id: Int!): ClassroomObject!
}

input CreateStudentInput {
  prefixid: Int!
  firstname: String!
  lastname: String!
  genderid: Int!
  birthdate: DateTime!
  gradelevelid: Int!
}

input UpdateStudentInput {
  prefixid: Int
  firstname: String
  lastname: String
  genderid: Int
  birthdate: DateTime
  gradelevelid: Int
  studentid: Int!
}

input CreateClassroomInput {
  classname: String!
  academic_year: Float!
  homeroom_teacher: String!
}

input UpdateClassroomInput {
  classname: String
  academic_year: Float
  homeroom_teacher: String
  classroomid: Float!
}